generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Category {
  id        String   @id @default(cuid())
  name      String   @unique
  slug      String   @unique
  image     String   @db.Text

  recipes   Recipe[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("categories")
}

model Ingredient {
  id       String @id
  amount   String

  item     Item   @relation(fields: [itemId], references: [id])
  itemId   String @map("item_id")

  recipe   Recipe @relation(fields: [recipeId], references: [id])
  recipeId String @map("recipe_id")

  @@map("ingredients")
}

model Instruction {
  id       String @id
  position Int
  text     String @db.Text

  recipe   Recipe @relation(fields: [recipeId], references: [id])
  recipeId String @map("recipe_id")

  @@map("instructions")
}

model Item {
  id          String       @id @default(cuid())
  name        String       @unique

  ingredients Ingredient[]

  createdAt   DateTime     @default(now()) @map("created_at")
  updatedAt   DateTime     @updatedAt @map("updated_at")

  @@map("items")
}

model Recipe {
  id           String        @id @default(cuid())
  name         String
  description  String?       @db.Text
  isPublic     Boolean       @default(false) @map("is_public")
  prepTime     String        @map("prep_time")
  cookTime     String        @map("cook_time")
  yield        String

  image        RecipeImage   @relation(fields: [imageId], references: [id])
  imageId      String        @unique @map("image_id")

  user         User          @relation(fields: [author], references: [username])
  author       String

  categories   Category[]
  ingredients  Ingredient[]
  instructions Instruction[]

  savedBy      User[]        @relation("SavedRecipes")

  createdAt    DateTime      @default(now()) @map("created_at")
  updatedAt    DateTime      @updatedAt @map("updated_at")

  @@map("recipes")
}

model RecipeImage {
  id      String  @id @default(cuid())
  url     String  @db.Text
  fileKey String  @map("file_key")

  recipe  Recipe?

  @@map("recipe_images")
}

model User {
  id           String   @id @default(cuid())
  clerkId      String   @unique @map("clerk_id")
  username     String   @unique

  followedBy   User[]   @relation("UserFollows") // A user can be followed by zero or more users
  following    User[]   @relation("UserFollows") // A user can follow zero or more users

  recipes      Recipe[]
  savedRecipes Recipe[] @relation("SavedRecipes")

  @@map("users")
}

// https://developers.google.com/search/docs/appearance/structured-data/recipe
// https://www.prisma.io/docs/concepts/components/prisma-schema/relations/self-relations#many-to-many-self-relations
// https://www.prisma.io/docs/concepts/components/prisma-schema/relations/many-to-many-relations#implicit-many-to-many-relations
